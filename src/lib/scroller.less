@white: #FFFFFF;
@whiteish: #F3F1F2;

@lightdark: #C8CCCF;
@darkish: #666;
@dark: #4F4F4F;


/* Need to remove overflow:hidden from #pb-root for sticky to work */
#pb-root {
    overflow: unset;
}
#article-body {
    max-width: unset;
}


.scroll-container {
    & > * {
        box-sizing: border-box;
        margin-bottom: 1.25em;
    }

    .scroll-graphic {
        position: sticky;
        top: 8em; // Top MUST be set for sticky to work
        svg {
            width: 100%;
            max-width: 100%;
        }
    }

    .scroll-text {
        z-index: 100; // Text should be above graphic
        position: relative; // Position must be set for z-index to work
        display: flex;
        flex-direction: column;
        width: 320px;
        margin: auto;
        pointer-events: none; // The text container should never steal mouse events to avoid conflict with graphic
        .step {
            margin-top: 44vh; // Margin area won't trigger scroll events
            margin-bottom: 22vh; // Margin area won't trigger scroll events
            .inner {
                padding: 1em;
                background-color: RGBA(255, 255, 255, 0.9);
                border: solid 1px #eaeaea;
                ul {
                    padding-left: 1.2em; // Not enough space for full padding
                }
            }
            &.highlighted .inner {
                background-color: RGBA(238, 245, 245, 0.9); // Selected
            }
        }

        &, &.right-aligned {
            align-items: flex-end;
            margin-right: -50px; // Overhang on right edge
        }
        &.left-aligned {
            align-items: flex-start;
            margin-left: -50px; // Overhang on left edge
        }
    }

    // Expand columns to full width (text & graphic will run in series)
    @media (max-width: 800px) {
        .scroll-graphic {
            top: 6em;
            height: 80vh;
        }
        .scroll-text {
            order: 1; // Always run text after graphic
            transform: unset;
            margin: 0 -20px; // No side margins
            .step {
                min-height: unset; // Don't use height in mobile mode
                padding-bottom: 60vh; // Use padding instead to maintain bottom-top distance
                padding-top: 20vh; // Extra padding on top so it triggers step earlier
                &:first-child {
                    padding-top: 0; // No padding on first element
                }
                &:last-child {
                    min-height: unset; // Don't use height in mobile mode
                    padding-bottom: 0; // Last child has no padding so it aligns to bottom
                }
                .inner {
                    padding: 0.5em 1em;
                }
            }
        }
    }
}
